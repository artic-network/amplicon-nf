{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/artic-network/amplicon-nf/master/nextflow_schema.json",
    "title": "artic-network/amplicon-nf pipeline parameters",
    "description": "Amplicon genome assembly for ARTIC style primer schemes using Nextflow.",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "input",
                "outdir",
                "store_dir"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open",
                    "default": "output"
                },
                "store_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "title": "Store directory name",
                    "description": "Where to store files downloaded by the pipeline for future use.",
                    "help_text": "Any downloaded primer schemes / clair3 models will be stored in this directory for future use. If not set when running from the command line, the schemes will be stored in the current working directory/store_dir. If this is run via epi2me by default they will be stored in your `epi2melabs/data/` directory if you use the default value.",
                    "fa_icon": "fas fa-database",
                    "default": "store_dir"
                },
                "read_directory": {
                    "type": "string",
                    "format": "directory-path",
                    "title": "Path containing FASTQ files or barcode directories.",
                    "description": "Path containing FASTQ file pairs (for Illumina) or barcode directories (for Nanopore). The pipeline will only try to match your input samplesheet CSV to the contents of this directory if FASTQ files or directories are not provided.",
                    "help_text": "This only needs to be set if you are not providing FASTQ files (or directories for Nanopore) in the samplesheet CSV. If you are providing FASTQ files in the samplesheet CSV, then this parameter will be ignored. Illumina: The pipeline will look for FASTQ file pairs which are named with the sample name, e.g. `sample1_R1.fastq.gz` and `sample1_R2.fastq.gz`.\nNanopore: The pipeline will look for directories named with the barcode, e.g. `fastq_pass/barcode01/` containing FASTQ files.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "pipeline_settings": {
            "title": "Pipeline Settings",
            "type": "object",
            "description": "General settings which change the behaviour of the pipeline for both ONT and Illumina workflows.",
            "default": "",
            "properties": {
                "normalise_depth": {
                    "type": "integer",
                    "default": 200,
                    "description": "What depth of sequencing coverage to normalise the primertrimmed BAM files to. Set to 0 to disable normalisation.",
                    "help_text": "Unless you have a specific reason to disable normalisation we recommend that you leave this set to 200. This will ensure that the consensus sequences generated from the primertrimmed BAM files are of a consistent depth, for amplicon sequencing higher depths are varely rarely of any utility and simply increase the time taken to run the pipeline.",
                    "fa_icon": "fas fa-area-chart"
                },
                "primer_mismatch_plot": {
                    "type": "boolean",
                    "description": "Whether to generate primer mismatch plots for each primer scheme utilised within the run.",
                    "help_text": "This will generate a plot showing the number of mismatches in the primers for each sample within the per-primer-scheme run report, this may be useful in cases where you have amplicon dropouts and are uncertain of the cause. This requires aligning all sample consensus sequences to a reference which may be prohibitive for some schemes / species hence this being optional.",
                    "fa_icon": "fas fa-chart-bar"
                },
                "min_coverage_depth": {
                    "type": "integer",
                    "default": 20,
                    "description": "Minimum coverage depth for a position to be included in the consensus sequence.",
                    "help_text": "This is the minimum coverage depth for a position to be included in the consensus sequence. If a position has less than this depth, it will be set to 'N' in the consensus sequence. This may be changed if you have a specific reason to do so, but we recommend that you leave it at 20 for most amplicon sequencing applications. Lower values may improve consensus sequence coverage but at the cost of accuracy, higher values may improve accuracy but at the cost of coverage.",
                    "fa_icon": "fas fa-area-chart"
                },
                "min_mapping_quality": {
                    "type": "integer",
                    "default": 20,
                    "description": "Minimum mapping quality for a read to be included in the consensus sequence.",
                    "help_text": "Reads which map to the reference sequence with a mapping quality lower than this threshold will be discarded during the `align_trim` primer trimming / normalisation step. This may be changed if you have a specific reason to do so, but we recommend that you leave it at 20 for most amplicon sequencing applications, this is likely to only be relevant if you are sequencing a virus with repeat regions longer than the scheme amplicon length such as MPXV where the ITRs at the start and end of the genome are identical meaning that read mappers are unable to distinguish whether a read originated at the 3' or 5' end.",
                    "fa_icon": "fas fa-align-right"
                },
                "primer_match_threshold": {
                    "type": "integer",
                    "default": 35,
                    "description": "Allow fuzzy primer position matching within this threshold.",
                    "help_text": "This controls how far outside of an amplicon boundary an alignment can be while still being considered a match to the primer. This is useful to control for instances where reads are not adapter / barcode trimmed (or incompletely trimmed) and these extra bases have some degree of homology with the reference leading to alignments extending beyond the amplicon boundary."
                },
                "allow_mismatched_primers": {
                    "type": "boolean",
                    "description": "Do not remove reads which appear to have mismatched primers.",
                    "help_text": "This prevents the pipeline from removing reads / read pairs which appear to have mismatched primers (i.e. those that cross an amplicon boundary). This can be useful in cases where a primer scheme has a high overlap between amplicons and your reads are shorter than said overlap, which can lead to large gaps within the consensus sequence since reads cannot be assigned to a specific amplicon. This should only be used if you are absolutely certain that you have a reason to do so since it may lead to poor quality consensus sequences being generated if used improperly."
                },
                "qc_pass_min_coverage": {
                    "type": "integer",
                    "default": 50,
                    "description": "Coverage of reference above 'minimum_coverage_depth' to be considered a minimal QC pass",
                    "help_text": "This number is only used to mark samples as passing QC within the run / sample reports, the default values are what we consider to be reasonable QC thresholds for amplicon sequencing but these should be changed to reflect your own requirements and QC processes."
                },
                "qc_pass_high_coverage": {
                    "type": "integer",
                    "default": 90,
                    "description": "Coverage of reference above `minimum_coverage_depth` to be considered a high QC pass.",
                    "help_text": "This number is only used to mark samples as passing QC within the run / sample reports, the default values are what we consider to be reasonable QC thresholds for amplicon sequencing but these should be changed to reflect your own requirements and QC processes."
                }
            },
            "required": [
                "normalise_depth",
                "min_coverage_depth",
                "qc_pass_min_coverage",
                "qc_pass_high_coverage",
                "min_mapping_quality",
                "primer_match_threshold"
            ]
        },
        "ont_pipeline_settings": {
            "title": "Nanopore (ONT) Pipeline Settings",
            "type": "object",
            "description": "Settings which change the behaviour of the pipeline specifically for the Nanopore (ONT) workflow.",
            "default": "",
            "properties": {
                "manual_clair3_model": {
                    "type": "string",
                    "title": "Manually specify clair3 model for the nanopore workflow",
                    "description": "Override auto-detected basecaller model that processed the signal data; used to select an appropriate Clair3 model.",
                    "help_text": "Per default, the workflow tries to determine the basecall model from the input data. This parameter can be used to override the detected value (or to provide a model name if none was found in the inputs). However, users should only do this if they know for certain which model was used as selecting the wrong option might give sub-optimal results. A list of recent models can be found here: https://github.com/nanoporetech/rerio/tree/master/clair3_models.",
                    "enum": [
                        "r1041_e82_260bps_fast_g632",
                        "r1041_e82_400bps_fast_g632",
                        "r1041_e82_400bps_sup_g615",
                        "r1041_e82_260bps_hac_g632",
                        "r1041_e82_400bps_hac_g615",
                        "r1041_e82_400bps_sup_v400",
                        "r1041_e82_260bps_hac_v400",
                        "r1041_e82_400bps_hac_g632",
                        "r1041_e82_400bps_sup_v410",
                        "r1041_e82_260bps_hac_v410",
                        "r1041_e82_400bps_hac_v400",
                        "r1041_e82_400bps_sup_v420",
                        "r1041_e82_260bps_sup_g632",
                        "r1041_e82_400bps_hac_v410",
                        "r1041_e82_400bps_sup_v430",
                        "r1041_e82_260bps_sup_v400",
                        "r1041_e82_400bps_hac_v420",
                        "r1041_e82_400bps_sup_v500",
                        "r1041_e82_260bps_sup_v410",
                        "r1041_e82_400bps_hac_v430",
                        "r104_e81_hac_g5015",
                        "r1041_e82_400bps_hac_v500",
                        "r104_e81_sup_g5015",
                        "r1041_e82_400bps_hac_v520",
                        "r1041_e82_400bps_sup_v520",
                        "r941_prom_sup_g5014",
                        "r941_prom_hac_g360+g422"
                    ]
                },
                "min_ont_read_quality": {
                    "type": "integer",
                    "title": "Minimum mean read quality for ONT reads to pass quality filtering in guppyplex",
                    "default": 7,
                    "description": "Minimum mean quality score for a read to pass quality filtering.",
                    "help_text": "Reads with a mean quality score below this threshold will be filtered out. This is a good way to filter out low-quality reads, in most cases this will have been done by the Dorado basecaller but you can use this to filter out any remaining low-quality reads or set a higher minimum threshold if desired."
                },
                "min_ont_read_length": {
                    "type": "integer",
                    "title": "Minimum read length for ONT reads to pass read length filtering in guppyplex",
                    "description": "Minimum length of a read to pass read length filtering.",
                    "help_text": "Reads shorter than this length will be filtered out. If you are using rapid barcoding this should be used carefully since rapid barcoding tagments amplicons during the barcoding reaction, if you are using a native barcoding kit then we recommend that you set this to your expected amplicon length - 10% (e.g. if your expected amplicon length is 400bp, then set this to 360bp).",
                    "fa_icon": "fas fa-align-left"
                },
                "max_ont_read_length": {
                    "type": "integer",
                    "title": "Maximum read length for ONT reads to pass read length filtering in guppyplex",
                    "description": "Maximum length of a read to pass read length filtering.",
                    "help_text": "Reads longer than this length will be filtered out. This is useful to filter out reads which are too long for the amplicon scheme which are likely to be contaminants, long PCR products, or readthrough errors.",
                    "fa_icon": "fas fa-align-right"
                },
                "skip_ont_quality_check": {
                    "type": "boolean",
                    "description": "Skip filtering of ONT read lengths.",
                    "help_text": "Set this to true if you want to skip filtering of ONT read lengths. If you are providing barcode dirs from a 'fastq_pass' directory then this should be set to true to avoid duplicate work."
                }
            }
        },
        "illumina_pipeline_settings": {
            "title": "Illumina Pipeline Settings",
            "type": "object",
            "description": "Settings which change the behaviour of the pipeline specifically for the Illumina workflow.",
            "default": "",
            "properties": {
                "lower_ambiguity_frequency": {
                    "type": "number",
                    "title": "Lower Ambiguity Frequency",
                    "default": 0.2,
                    "description": "Minimum frequency of a minor allele variant to call an ambiguous variant in Freebayes.",
                    "help_text": "Increasing this value will result in fewer ambiguity codes being added to the consensus sequence whereas reducing it will increase them. Ambiguity codes may make phylogenetic analysis more difficult so this should be modified with care."
                },
                "upper_ambiguity_frequency": {
                    "type": "number",
                    "default": 0.8,
                    "description": "Maximum frequency of a major allele variant to call an ambiguous variant in Freebayes.",
                    "help_text": "Increasing this value will result in fewer ambiguity codes being added to the consensus sequence whereas reducing it will increase them. Ambiguity codes may make phylogenetic analysis more difficult so this should be modified with care."
                },
                "min_ambiguity_count": {
                    "type": "integer",
                    "title": "Minimum Ambiguous Allele Count",
                    "default": 10,
                    "description": "Minimum absolute number of reads supporting a minor allele variant to call an ambiguous variant in Freebayes.",
                    "help_text": "Increasing this value will result in fewer ambiguity codes being added to the consensus sequence whereas reducing it will increase them. Ambiguity codes may make phylogenetic analysis more difficult so this should be modified with care."
                }
            },
            "required": [
                "lower_ambiguity_frequency",
                "upper_ambiguity_frequency",
                "min_ambiguity_count"
            ]
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/pipeline_settings"
        },
        {
            "$ref": "#/$defs/ont_pipeline_settings"
        },
        {
            "$ref": "#/$defs/illumina_pipeline_settings"
        },
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}